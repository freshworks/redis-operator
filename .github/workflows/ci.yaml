name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - master
jobs:
    check:
        name: Golang Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
                  cache: false
            - name: Install golangci-lint
              run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.57.0
            - name: Run linter
              run: make ci-lint

    unit-test:
        name: Unit test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
            - run: make ci-unit-test

    integration-test:
        name: Integration test
        runs-on: ubuntu-latest
        needs: [check, unit-test]
        strategy:
            matrix:
                kubernetes: [1.27.3, 1.28.13, 1.29.8, 1.30.4, 1.31.0, 1.32.0, 1.33.0]
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod
            - name: Install conntrack
              run: sudo apt-get install -y conntrack
            - uses: medyagh/setup-minikube@latest
              with:
                  kubernetes-version: ${{ matrix.kubernetes }}
                  minikube-version: v1.36.0
                  driver: none
            - name: Add redisfailover CRD
              run: kubectl create -f manifests/databases.spotahome.com_redisfailovers.yaml
            - run: make ci-integration-test

    chart-test:
        name: Chart testing
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install Helm
              uses: azure/setup-helm@v4
              with:
                  version: v3.12.3

            - name: Helm test
              run: make helm-test
